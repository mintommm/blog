name: Download Content, Build and Deploy

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:
    inputs:
      ignore_cache:
        description: 'キャッシュを無視してコンテンツを強制的に再ダウンロードしますか？ (true/false)'
        required: false
        default: 'false'
        type: boolean

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'write' # main.pyがcontentディレクトリに書き込むため & Cloudflare Pages Actionで必要になる可能性
      id-token: 'write' # Workload Identity Federationに必要
      deployments: 'write' # Cloudflare Pages ActionがGitHub Deploymentを作成するために必要
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Disable quotePath # 非ASCIIファイル名対応
      run: git config core.quotePath false

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: 'gdrive_sync/.python-version'

    - name: Install uv
      run: python -m pip install --upgrade pip uv

    - name: Install dependencies with uv
      run: |
        uv pip compile pyproject.toml -o uv.lock
        uv sync
      working-directory: gdrive_sync

    - name: Restore content cache
      id: cache-content
      if: github.event.inputs.ignore_cache != 'true'
      uses: actions/cache@v4
      with:
        path: content/posts/google-drive # キャッシュ対象を main.py の出力先に限定
        key: ${{ runner.os }}-markdown-content-${{ hashFiles('gdrive_sync/main.py') }} # OSとmain.pyのハッシュでキーを生成
        # restore-keys: | # 必要に応じて古いキャッシュからの復元キーを追加
        #   ${{ runner.os }}-markdown-content-

    - name: Remove old marker file
      run: rm -f .content-updated

    - name: Run Python script
      run: uv run python gdrive_sync/main.py
      env:
        GOOGLE_DRIVE_PARENT_ID: ${{ secrets.GOOGLE_DRIVE_PARENT_ID }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}

    - name: Check for content update marker
      id: check_update_marker
      run: |
        if [ -f ".content-updated" ]; then
          echo "Content was updated by main.py."
          echo "content_was_updated=true" >> $GITHUB_OUTPUT
        else
          echo "Content was not updated by main.py."
          echo "content_was_updated=false" >> $GITHUB_OUTPUT
        fi

    # - name: Save content cache # 明示的な保存ステップをコメントアウト
    #   if: github.event.inputs.ignore_cache != 'true'
    #   uses: actions/cache/save@v4
    #   with:
    #     path: content/posts/google-drive
    #     key: ${{ runner.os }}-markdown-content-${{ hashFiles('gdrive_sync/main.py') }}

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v3
      with:
        hugo-version: 'latest'
        extended: true

    - name: Build Hugo site
      env:
        TZ: Asia/Tokyo
      run: hugo --minify

    - name: Deploy to Cloudflare Pages
      # コンテンツが更新されたか、キャッシュ無視の場合のみデプロイ
      if: steps.check_update_marker.outputs.content_was_updated == 'true' || github.event.inputs.ignore_cache == 'true'
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        command: pages deploy public --project-name=${{ secrets.CLOUDFLARE_PROJECT_NAME }}
